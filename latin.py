import streamlit as st
import requests
import json
from docx import Document
from docx.shared import Inches
from io import BytesIO
import random
from PIL import Image
import base64

# Configuraci칩n de la p치gina
st.set_page_config(
    page_title="Generador de Cuentos Infantiles en Lat칤n Simplificado con Ilustraciones",
    layout="centered",
    initial_sidebar_state="auto",
)

# T칤tulo de la aplicaci칩n
st.title("游닄 Generador de Cuentos Infantiles en Lat칤n Simplificado con Ilustraciones")

# Descripci칩n
st.markdown("""
Genera cuentos personalizados en **lat칤n simplificado** para ni침os, adaptados a diferentes grupos de edad. 
Especifica el n칰mero de cuentos (hasta 15), y deja que la aplicaci칩n cree historias atractivas con temas variados, longitudes apropiadas y dos hermosas ilustraciones por cuento.
""")

# Lista predefinida de 150 temas
themes = [
    "aventura en el bosque",
    "un viaje m치gico",
    "amistad y trabajo en equipo",
    "superar miedos",
    "un d칤a en la playa",
    "exploraci칩n espacial",
    "misterio submarino",
    "viaje en el tiempo",
    "una b칰squeda heroica",
    "aprender a compartir",
    "el castillo encantado",
    "una historia de detectives",
    "compa침eros robots",
    "tierra de fantas칤a",
    "reino animal",
    "el drag칩n amigable",
    "la princesa valiente",
    "el robot perdido",
    "la isla secreta",
    "un monstruo en el armario",
    "la f치brica de chocolate",
    "el tren m치gico",
    "los juguetes que cobran vida",
    "una aventura en el desierto",
    "el bosque de los sue침os",
    "el misterioso castillo",
    "el h칠roe inesperado",
    "la escuela de magia",
    "el cohete a la luna",
    "el puente arco칤ris",
    "el viaje al fondo del mar",
    "la casa de los 치rboles",
    "el robot y el ni침o",
    "la feria encantada",
    "el tesoro escondido",
    "la carrera de globos",
    "el bosque de las hadas",
    "el caballo volador",
    "la carrera espacial",
    "el jard칤n secreto",
    "la tormenta de estrellas",
    "el mago y el aprendiz",
    "la ciudad perdida",
    "el misterio del lago",
    "la aventura en la monta침a",
    "el libro de los deseos",
    "la isla de los dinosaurios",
    "el viaje al centro de la tierra",
    "el circo de los sue침os",
    "el unicornio m치gico",
    "la amistad con un extraterrestre",
    "aventuras en el mundo de los sue침os",
    "el tesoro del viejo faro",
    "la carrera contra el tiempo",
    "el misterio de la cueva escondida",
    "viaje al mundo de los insectos",
    "la ciudad flotante",
    "el guardi치n del bosque",
    "el portal secreto",
    "la fiesta de cumplea침os sorpresa",
    "el reino de los colores",
    "la historia del peque침o gigante",
    "el misterio de las estrellas perdidas",
    "la magia de la lluvia",
    "el viaje al pa칤s de los juguetes",
    "la aventura en el planeta desconocido",
    "el drag칩n de hielo",
    "la traves칤a del peque침o barco",
    "el jard칤n encantado",
    "la amistad entre una bruja y un hada",
    "el misterio de la luna llena",
    "la b칰squeda del arco칤ris perdido",
    "el mundo invertido",
    "la isla de los sue침os olvidados",
    "el lobo sabio",
    "la torre m치gica",
    "el pr칤ncipe y el sapo",
    "la sirena valiente",
    "el drag칩n de fuego",
    "la estrella fugaz",
    "el bosque de los duendes",
    "la isla de los tesoros",
    "el viaje al pa칤s de las maravillas",
    "la caba침a misteriosa",
    "el castillo de hielo",
    "la hero칤na escondida",
    "el mago oscuro",
    "la nave perdida",
    "el reino de las nubes",
    "la princesa del desierto",
    "el puente encantado",
    "la aventura en el volc치n",
    "el jard칤n de las mariposas",
    "la luna de los deseos",
    "el valle de los sue침os",
    "la mariposa dorada",
    "el unicornio de la monta침a",
    "la historia del 치rbol milenario",
    "el guardi치n del arco칤ris",
    "la cueva de los misterios",
    "el castillo de los espejos",
    "la princesa guerrera",
    "el r칤o de la magia",
    "la luna llena y el lobo",
    "el reino submarino",
    "la aventura en la selva tropical",
    "el mago de los vientos",
    "la dama del lago",
    "el viaje al pa칤s de los gigantes",
    "la ciudad de las luces",
    "el secreto del bosque",
    "la sirena del arrecife",
    "el h칠roe del desierto",
    "la princesa de las estrellas",
    "el drag칩n y el ni침o",
    "la luna de plata",
    "el viaje al coraz칩n del bosque",
    "la estrella del norte",
    "el reino de las sombras",
    "la aventura en el cielo",
    "el mago del tiempo",
    "la princesa del mar",
    "el castillo de los dragones",
    "la historia del lobo solitario",
    "el viaje a la tierra de los sue침os",
    "la princesa y el drag칩n",
    "el guardi치n de la monta침a",
    "la magia del bosque",
    "el viaje al reino de cristal",
    "la sirena y el pr칤ncipe",
    "el mago de la selva",
    "la aventura en el mundo invertido",
    "el castillo de los sue침os",
    "la luna y las estrellas",
    "el viaje al pa칤s de los cuentos",
    "la princesa y el unicornio",
    "el guardi치n de la cueva",
    "la historia del hada olvidada",
    "el drag칩n de la tormenta",
    "la aventura en el jard칤n secreto",
    "el mago de la oscuridad",
    "la sirena y el lobo",
    "el viaje al reino de las hadas",
    "la princesa de los vientos",
    "el guardi치n de los sue침os",
    "la magia de la luna",
    "el viaje al coraz칩n del oc칠ano",
    "la historia del lobo y la luna",
    "el castillo de las estrellas",
    "la princesa y el mago",
    "el drag칩n de la selva",
    "la aventura en el reino de las nubes",
    "el mago de los mares",
    "la sirena de las profundidades",
    "el viaje al pa칤s de los sue침os",
    "la princesa del bosque encantado",
    "el guardi치n del r칤o",
    "la historia del hada y el unicornio",
    "el drag칩n y la princesa",
    "la aventura en el valle m치gico",
    "el mago del bosque"
    ]

    # Lista predefinida de nombres de personajes 칰nicos
character_names = [
        "Luna", "Mateo", "Sof칤a", "Emilio", "Valentina", "Lucas", "Isabella", "Alejandro",
        "Camila", "Gabriel", "Emma", "Benjam칤n", "Victoria", "Daniel", "Luc칤a", "Diego",
        "Martina", "Samuel", "Natalia", "Sebasti치n", "Valeria", "Emiliano", "Catalina",
        "Amelia", "Jorge", "Renata", "Andr칠s", "Sara", "Antonio", "Claudia",
        "Pablo", "M칤a", "Ricardo", "Alicia", "Javier", "Paula", "Santiago", "Gabriela",
        "Hugo", "Mar칤a", "Fernando", "Julia", "Adri치n", "Lorena", "Tom치s", "Andrea",
        "칍scar", "Fernanda"
    ]

    # Funci칩n para generar un 칰nico nombre de personaje
    def get_unique_name(used_names):
        available_names = list(set(character_names) - set(used_names))
        if not available_names:
            # Si se agotan los nombres, generar uno aleatorio
            return f"Personaje_{random.randint(1000, 9999)}"
        return random.choice(available_names)

    # Barra lateral para la entrada del usuario
    st.sidebar.header("Par치metros de Entrada")

    # Entrada para el n칰mero de cuentos
    num_stories = st.sidebar.number_input(
        "N칰mero de Cuentos",
        min_value=1,
        max_value=15,
        value=1,
        step=1
    )

    # Grupos de edad para elegir
    age_groups = ["3-5 a침os", "6-8 a침os", "9-12 a침os"]
    selected_age_group = st.sidebar.selectbox(
        "Selecciona el Grupo de Edad para los Cuentos",
        age_groups
    )

    # Bot칩n para generar cuentos
    if st.sidebar.button("Generar Cuentos"):
        with st.spinner("Generando cuentos e ilustraciones..."):
            # Funci칩n para generar y corregir un solo cuento usando OpenRouter
            def generate_corrected_story(theme, age_group, character_name):
                api_url = "https://openrouter.ai/api/v1/chat/completions"
                headers = {
                    "Content-Type": "application/json",
                    "Authorization": f"Bearer {st.secrets['OPENROUTER_API_KEY']}"
                }

                # Definir las 20 directrices
                guidelines = """
    1. **Desarrollo de Personajes:**
       - Profundiza en los conflictos internos de los personajes. Muestra sus miedos, dudas y peque침as victorias para hacerlos m치s humanos y relacionables. A medida que cada personaje enfrenta un desaf칤o, incluye momentos donde reflexionen sobre sus inseguridades o limitaciones para enriquecer su crecimiento.

    2. **Consistencia en el Tono y Edad:**
       - Las historias est치n dirigidas a lectores de 12 a침os, pero algunos temas y emociones pueden ser ligeramente avanzados para esta edad. Simplifica ciertas decisiones morales y emocionales, o haz que los personajes act칰en y piensen de manera apropiada para su edad para mantener la autenticidad.

    3. **Detalles Sensoriales:**
       - Utiliza descripciones sensoriales para hacer que los entornos y experiencias sean m치s inmersivos. Incorpora olores, sonidos y texturas para crear una atm칩sfera m치s rica y ayudar a los lectores a sentirse m치s conectados con el mundo de la historia.

    4. **Morales Sutiles:**
       - Presenta las lecciones de cada historia de manera m치s impl칤cita en lugar de expl칤cita. Permite que los personajes y los lectores descubran la moral a trav칠s de acciones y consecuencias, haciendo que el mensaje sea m치s efectivo y menos moralizante.

    5. **Profundizaci칩n de Relaciones entre Personajes:**
       - Los lazos entre personajes a침aden una capa emocional a las historias. Muestra interacciones que revelen m치s sobre sus relaciones (conflictos, apoyo, amistades) para ayudar a los lectores a sentirse m치s conectados emocionalmente con la historia.

    6. **Conflictos y Desaf칤os Graduales:**
       - Aseg칰rate de que los personajes enfrenten obst치culos en una progresi칩n natural. Esto a침ade tensi칩n y hace que la resoluci칩n sea m치s satisfactoria, ya que el personaje supera diversos desaf칤os para lograr su objetivo.

    7. **Variedad de Conflictos:**
       - Var칤a los tipos de conflictos (internos, externos, naturales, sobrenaturales, emocionales) para dar dinamismo a la colecci칩n y evitar un patr칩n repetitivo. Esto permite la exploraci칩n de diferentes tipos de coraje, empat칤a y creatividad.

    8. **S칤mbolos y Elementos Recurrentes:**
       - Incluye s칤mbolos o elementos recurrentes (como objetos, frases o lugares) que tengan un significado especial en cada historia. Esto unifica la colecci칩n tem치ticamente, ayudando a los lectores a encontrar conexiones y significados a lo largo de las historias.

    9. **Contexto del Mundo y Antecedentes:**
       - En historias con un mundo m치gico o fant치stico, ofrece un breve contexto del entorno o las "reglas m치gicas" para construir un universo consistente. Esto mejora el atractivo y la inmersi칩n de la historia.

    10. **Mostrar, No Contar:**
        - En lugar de decir directamente al lector lo que un personaje siente o aprende, mu칠stralo a trav칠s de acciones, gestos y decisiones. Esta t칠cnica narrativa permite que los lectores interpreten las emociones del personaje y extraigan la moral por s칤 mismos.

    11. **Fortalecer Temas de Fondo:**
        - Aseg칰rate de que cada historia tenga un tema central claro (como valent칤a, amistad o empat칤a) y expl칩ralo en profundidad. Los temas consistentes a lo largo de la colecci칩n le dan una identidad cohesiva.

    12. **Desarrollar Personajes Memorables:**
        - Los personajes principales deben tener cualidades distintivas (como valent칤a, ingenio o humildad) que se reflejen en sus acciones y decisiones. A침ade peque침os detalles f칤sicos o emocionales para hacerlos m치s humanos y f치ciles de recordar para los lectores.

    13. **Agregar Detalles Sensoriales:**
        - Utiliza descripciones sensoriales (olor, tacto, sonido) para sumergir a los lectores en el entorno de cada historia. Estos detalles enriquecen la narrativa y ayudan a los lectores a sentir que est치n explorando estos mundos con los personajes.

    14. **Incorporar Conflictos o Desaf칤os Claros:**
        - Cada historia debe tener un conflicto o desaf칤o central para que el protagonista lo supere. Esto crea tensi칩n y mantiene a los lectores enganchados. Adem치s, resolver problemas o enfrentar dilemas hace que las historias sean m치s din치micas.

    15. **Mostrar Crecimiento y Aprendizaje:**
        - Aseg칰rate de que los personajes crezcan o aprendan algo significativo en cada historia. Las lecciones o cambios internos deben sentirse naturales y reflejarse en la narrativa sin parecer forzados, haciendo que el aprendizaje sea algo que los lectores puedan sentir y comprender.

    16. **Crear una Conexi칩n con el Lector:**
        - Utiliza situaciones o emociones que los ni침os puedan relacionar, como la curiosidad, el miedo a lo desconocido o la b칰squeda de aceptaci칩n. Esto les ayuda a sentirse parte de la historia y a comprender mejor el mensaje.

    17. **A침adir Humor y Toques Ligeros:**
        - Aunque las historias deben contener una lecci칩n, a침ade humor en di치logos o interacciones entre personajes. Esto no solo hace que la lectura sea m치s entretenida, sino que tambi칠n equilibra la historia, especialmente si el mensaje es profundo.

    18. **Usar Ritmo y Variedad en la Narrativa:**
        - Juega con el ritmo, alternando momentos de calma con picos de emoci칩n o tensi칩n. Adem치s, var칤a el lenguaje y el estilo de narraci칩n en cada historia para mantener la frescura, incluso con un tono general consistente.

    19. **Crear Introducciones y Conclusiones Memorables:**
        - Las l칤neas de apertura deben captar la atenci칩n del lector, y las conclusiones deben dejar una sensaci칩n de satisfacci칩n o reflexi칩n. Esto hace que la historia sea m치s impactante y memorable.

    20. **Transmitir Valores Positivos sin Ser Moralista:**
        - En lugar de hacer la moral expl칤cita, permite que los valores positivos emerjan naturalmente de las decisiones y acciones de los personajes. Esto evita que las historias se sientan moralizantes y da al mensaje una resonancia poderosa y sutil.
    """

                # A침adir las directrices al prompt
                prompt = f"""
    {guidelines}

    Crea una historia que cumpla con las siguientes caracter칤sticas:

    - Tema: {theme}
    - Grupo de edad: {age_group}
    - Nombre del personaje principal: {character_name}
    - Texto continuo sin subdivisiones ni subt칤tulos.
    - Escribe la historia en **lat칤n simplificado**, utilizando una gram치tica y vocabulario adecuados para ni침os que est치n aprendiendo el idioma.
    """

                data = {
                    "model": "gpt-4",  # Aseg칰rate de que este modelo est칠 disponible en OpenRouter
                    "messages": [
                        {
                            "role": "user",
                            "content": prompt
                        }
                    ],
                    "temperature": 0.7,
                    "max_tokens": 1500  # Aumentar tokens para asegurar suficiente contenido en lat칤n
                }

                try:
                    response = requests.post(api_url, headers=headers, data=json.dumps(data))
                    response.raise_for_status()
                    result = response.json()

                    # Verificar estructura de la respuesta
                    if 'choices' in result and len(result['choices']) > 0:
                        story = result['choices'][0]['message']['content'].strip()
                    else:
                        st.error("Respuesta inesperada de la API de OpenRouter.")
                        return "Lo siento, ocurri칩 un error al generar el cuento."

                    return story
                except requests.exceptions.HTTPError as http_err:
                    st.error(f"Ocurri칩 un error HTTP: {http_err}")
                    if 'response' in locals():
                        st.write(response.text)  # Mostrar la respuesta completa para depuraci칩n
                except Exception as err:
                    st.error(f"Ocurri칩 un error: {err}")
                return "Lo siento, ocurri칩 un error al generar el cuento."

            # Funci칩n para generar una ilustraci칩n usando Together.xyz
            def generate_image(prompt_description):
                together_api_key = st.secrets.get('TOGETHER_API_KEY')
                if not together_api_key:
                    st.error("La clave API de Together.xyz no est치 configurada en los secretos de Streamlit.")
                    return None

                api_url = "https://api.together.xyz/v1/images/generations"
                headers = {
                    "Content-Type": "application/json",
                    "Authorization": f"Bearer {together_api_key}"
                }

                data = {
                    "model": "black-forest-labs/FLUX.1.1-pro",
                    "prompt": prompt_description,
                    "width": 512,
                    "height": 512,
                    "steps": 1,
                    "n": 1,
                    "response_format": "b64_json"
                }

                try:
                    response = requests.post(api_url, headers=headers, data=json.dumps(data))
                    response.raise_for_status()
                    result = response.json()
                    b64_image = result['data'][0]['b64_json']
                    image_bytes = base64.b64decode(b64_image)
                    image = Image.open(BytesIO(image_bytes))
                    return image
                except requests.exceptions.HTTPError as http_err:
                    st.error(f"Ocurri칩 un error HTTP al generar la imagen: {http_err}")
                    if 'response' in locals():
                        st.write(response.text)  # Mostrar la respuesta completa para depuraci칩n
                except Exception as err:
                    st.error(f"Ocurri칩 un error al generar la imagen: {err}")
                return None

            # Seleccionar temas para el n칰mero de cuentos
            selected_themes = random.sample(themes, num_stories) if num_stories <= len(themes) else random.choices(themes, k=num_stories)

            # Generar todos los cuentos y sus ilustraciones
            stories = []
            used_names = []
            progress_bar = st.progress(0)
            for i in range(num_stories):
                theme = selected_themes[i]
                # Obtener un nombre de personaje 칰nico
                character_name = get_unique_name(used_names)
                used_names.append(character_name)
                story = generate_corrected_story(theme, selected_age_group, character_name)
                if story.startswith("Lo siento"):
                    images = [None, None]
                else:
                    # Crear descripciones para las ilustraciones basadas en el tema y el contenido del cuento
                    image_prompt1 = f"Una ilustraci칩n colorida y atractiva para un cuento infantil sobre {theme}."
                    image_prompt2 = f"Una segunda ilustraci칩n que represente un momento clave en la historia de {character_name} en el tema de {theme}."
                    image1 = generate_image(image_prompt1)
                    image2 = generate_image(image_prompt2)
                    images = [image1, image2]
                stories.append({
                    "title": f"Cap칤tulo {i+1}: {theme.title()}",
                    "content": story,
                    "images": images  # Almacenar una lista de im치genes
                })
                progress_bar.progress((i + 1) / num_stories)

            # Crear un documento de Word
            doc = Document()
            doc.add_heading("Cuentos Infantiles en Lat칤n Simplificado con Ilustraciones", 0)

            for story in stories:
                doc.add_heading(story["title"], level=1)
                doc.add_paragraph(story["content"])
                if story["images"]:
                    for idx, image in enumerate(story["images"]):
                        if image:
                            # Guardar la imagen en un flujo de bytes
                            img_byte_arr = BytesIO()
                            image.save(img_byte_arr, format='PNG')
                            img_byte_arr = img_byte_arr.getvalue()
                            
                            # Agregar la imagen al documento
                            doc.add_picture(BytesIO(img_byte_arr), width=Inches(4))
                            doc.add_paragraph("")  # Espacio adicional despu칠s de la imagen
                        else:
                            doc.add_paragraph(f"No se pudo generar la ilustraci칩n {idx + 1}.")
                else:
                    doc.add_paragraph("No se pudieron generar las ilustraciones para este cuento.")

            # Guardar el documento en un flujo de BytesIO
            doc_io = BytesIO()
            doc.save(doc_io)
            doc_io.seek(0)

            # Proporcionar el bot칩n de descarga
            st.success("춰Cuentos e ilustraciones generados con 칠xito!")
            st.download_button(
                label="游늯 Descargar Cuentos como Documento de Word",
                data=doc_io,
                file_name="Cuentos_Infantiles_en_Latin_Simplificado_Con_Ilustraciones.docx",
                mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
            )

            # Opcional: mostrar los cuentos e ilustraciones en la aplicaci칩n
            with st.expander("Ver Cuentos e Ilustraciones Generados"):
                for story in stories:
                    st.markdown(f"### {story['title']}")
                    st.write(story["content"])
                    if story["images"]:
                        for idx, image in enumerate(story["images"]):
                            if image:
                                st.image(image, caption=f"Ilustraci칩n {idx + 1} del cuento", use_column_width=True)
                            else:
                                st.write(f"No se pudo generar la ilustraci칩n {idx + 1}.")
                    else:
                        st.write("No se pudieron generar las ilustraciones para este cuento.")

    # Pie de p치gina
    st.markdown("---")
    st.markdown("춸 2024 Generador de Cuentos Infantiles. Desarrollado con OpenRouter, Together.xyz y Streamlit.")
    ```

## **3. Explicaci칩n Detallada de las Modificaciones**

### **a. Actualizaci칩n de los Prompts para Lat칤n Simplificado**

- **Objetivo:** Instruir al modelo para que genere las historias en **lat칤n simplificado**.
- **Implementaci칩n:** En la funci칩n `generate_corrected_story`, el prompt ahora incluye la instrucci칩n expl칤cita para escribir en lat칤n simplificado.
  
  ```python
  prompt = f"""
  {guidelines}

  Crea una historia que cumpla con las siguientes caracter칤sticas:

  - Tema: {theme}
  - Grupo de edad: {age_group}
  - Nombre del personaje principal: {character_name}
  - Texto continuo sin subdivisiones ni subt칤tulos.
  - Escribe la historia en **lat칤n simplificado**, utilizando una gram치tica y vocabulario adecuados para ni침os que est치n aprendiendo el idioma.
  """
