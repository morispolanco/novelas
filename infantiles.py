import streamlit as st
import requests
import json
from docx import Document
from docx.shared import Inches
from io import BytesIO
import random
from PIL import Image
import base64

# Configuraci칩n de la p치gina
st.set_page_config(
    page_title="Generador de Cuentos Infantiles con Ilustraciones",
    layout="centered",
    initial_sidebar_state="auto",
)

# T칤tulo de la aplicaci칩n
st.title("游닄 Generador de Cuentos Infantiles con Ilustraciones")

# Descripci칩n
st.markdown("""
Genera cuentos personalizados en espa침ol para ni침os, adaptados a diferentes grupos de edad. 
Especifica el n칰mero de cuentos (hasta 15), y deja que la aplicaci칩n cree historias atractivas con temas variados, longitudes apropiadas y hermosas ilustraciones.
""")

# Barra lateral para la entrada del usuario
st.sidebar.header("Par치metros de Entrada")

# Entrada para el n칰mero de cuentos
num_stories = st.sidebar.number_input(
    "N칰mero de Cuentos",
    min_value=1,
    max_value=15,
    value=1,
    step=1
)

# Grupos de edad para elegir
age_groups = ["3-5 a침os", "6-8 a침os", "9-12 a침os"]
selected_age_group = st.sidebar.selectbox(
    "Selecciona el Grupo de Edad para los Cuentos",
    age_groups
)

# Bot칩n para generar cuentos
if st.sidebar.button("Generar Cuentos"):
    with st.spinner("Generando cuentos e ilustraciones..."):
        # Funci칩n para generar un solo cuento
        def generate_story(theme, age_group):
            api_url = "https://openrouter.ai/api/v1/chat/completions"
            headers = {
                "Content-Type": "application/json",
                "Authorization": f"Bearer {st.secrets['OPENROUTER_API_KEY']}"
            }

            # Definir el prompt basado en el grupo de edad
            if age_group == "3-5 a침os":
                prompt = f"Escribe un cuento corto y sencillo en espa침ol para ni침os de {age_group}. El tema es {theme}. Mant칠n la historia atractiva y f치cil de entender."
            elif age_group == "6-8 a침os":
                prompt = f"Escribe un cuento infantil adecuado en espa침ol para ni침os de {age_group}. El tema es {theme}. Aseg칰rate de que la historia tenga una trama clara y sea apropiada para este grupo de edad."
            else:  # 9-12 a침os
                prompt = f"Escribe un cuento infantil atractivo en espa침ol para ni침os de {age_group}. El tema es {theme}. La historia debe tener una trama m치s compleja y un vocabulario apropiado para este grupo de edad."

            data = {
                "model": "openai/gpt-4o-mini",
                "messages": [
                    {
                        "role": "user",
                        "content": prompt
                    }
                ]
            }

            try:
                response = requests.post(api_url, headers=headers, data=json.dumps(data))
                response.raise_for_status()
                result = response.json()
                story = result['choices'][0]['message']['content'].strip()
                return story
            except requests.exceptions.HTTPError as http_err:
                st.error(f"Ocurri칩 un error HTTP: {http_err}")
            except Exception as err:
                st.error(f"Ocurri칩 un error: {err}")
            return "Lo siento, ocurri칩 un error al generar el cuento."

        # Funci칩n para generar una ilustraci칩n usando Together.xyz
        def generate_image(prompt_description):
            together_api_key = st.secrets.get('TOGETHER_API_KEY')
            if not together_api_key:
                st.error("La clave API de Together.xyz no est치 configurada en los secretos de Streamlit.")
                return None

            api_url = "https://api.together.xyz/v1/images/generations"
            headers = {
                "Content-Type": "application/json",
                "Authorization": f"Bearer {together_api_key}"
            }

            data = {
                "model": "black-forest-labs/FLUX.1.1-pro",
                "prompt": prompt_description,
                "width": 512,
                "height": 512,
                "steps": 1,
                "n": 1,
                "response_format": "b64_json"
            }

            try:
                response = requests.post(api_url, headers=headers, data=json.dumps(data))
                response.raise_for_status()
                result = response.json()
                b64_image = result['data'][0]['b64_json']
                image_bytes = base64.b64decode(b64_image)
                image = Image.open(BytesIO(image_bytes))
                return image
            except requests.exceptions.HTTPError as http_err:
                st.error(f"Ocurri칩 un error HTTP al generar la imagen: {http_err}")
            except Exception as err:
                st.error(f"Ocurri칩 un error al generar la imagen: {err}")
            return None

        # Lista predefinida de 50 temas
        themes = [
            "aventura en el bosque",
            "un viaje m치gico",
            "amistad y trabajo en equipo",
            "superar miedos",
            "un d칤a en la playa",
            "exploraci칩n espacial",
            "misterio submarino",
            "viaje en el tiempo",
            "una b칰squeda heroica",
            "aprender a compartir",
            "el castillo encantado",
            "una historia de detectives",
            "compa침eros robots",
            "tierra de fantas칤a",
            "reino animal",
            "el drag칩n amigable",
            "la princesa valiente",
            "el robot perdido",
            "la isla secreta",
            "un monstruo en el armario",
            "la f치brica de chocolate",
            "el tren m치gico",
            "los juguetes que cobran vida",
            "una aventura en el desierto",
            "el bosque de los sue침os",
            "el misterioso castillo",
            "el h칠roe inesperado",
            "la escuela de magia",
            "el cohete a la luna",
            "el puente arco칤ris",
            "el viaje al fondo del mar",
            "la casa de los 치rboles",
            "el robot y el ni침o",
            "la feria encantada",
            "el tesoro escondido",
            "la carrera de globos",
            "el bosque de las hadas",
            "el caballo volador",
            "la carrera espacial",
            "el jard칤n secreto",
            "la tormenta de estrellas",
            "el mago y el aprendiz",
            "la ciudad perdida",
            "el misterio del lago",
            "la aventura en la monta침a",
            "el libro de los deseos",
            "la isla de los dinosaurios",
            "el viaje al centro de la tierra",
            "el circo de los sue침os"
        ]

        # Seleccionar temas para el n칰mero de cuentos
        selected_themes = random.sample(themes, num_stories) if num_stories <= len(themes) else random.choices(themes, k=num_stories)

        # Generar todos los cuentos y sus ilustraciones
        stories = []
        for i in range(num_stories):
            theme = selected_themes[i]
            story = generate_story(theme, selected_age_group)
            if story.startswith("Lo siento"):
                image = None
            else:
                # Crear una descripci칩n para la ilustraci칩n basada en el tema
                image_prompt = f"Una ilustraci칩n colorida y atractiva para un cuento infantil sobre {theme}."
                image = generate_image(image_prompt)
            stories.append({
                "title": f"Cuento {i+1}: {theme.title()}",
                "content": story,
                "image": image
            })

        # Crear un documento de Word
        doc = Document()
        doc.add_heading("Cuentos Infantiles con Ilustraciones", 0)

        for story in stories:
            doc.add_heading(story["title"], level=1)
            doc.add_paragraph(story["content"])
            if story["image"]:
                # Guardar la imagen en un flujo de bytes
                img_byte_arr = BytesIO()
                story["image"].save(img_byte_arr, format='PNG')
                img_byte_arr = img_byte_arr.getvalue()
                
                # Agregar la imagen al documento
                doc.add_picture(BytesIO(img_byte_arr), width=Inches(4))  # Ajuste del ancho a 4 pulgadas para mejor adaptaci칩n
                doc.add_paragraph("")  # Espacio adicional despu칠s de la imagen

        # Guardar el documento en un flujo de BytesIO
        doc_io = BytesIO()
        doc.save(doc_io)
        doc_io.seek(0)

        # Proporcionar el bot칩n de descarga
        st.success("춰Cuentos e ilustraciones generados con 칠xito!")
        st.download_button(
            label="游늯 Descargar Cuentos como Documento de Word",
            data=doc_io,
            file_name="Cuentos_Infantiles_Con_Ilustraciones.docx",
            mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
        )

        # Opcional: mostrar los cuentos e ilustraciones en la aplicaci칩n
        with st.expander("Ver Cuentos e Ilustraciones Generados"):
            for story in stories:
                st.markdown(f"### {story['title']}")
                st.write(story["content"])
                if story["image"]:
                    st.image(story["image"], caption="Ilustraci칩n del cuento", use_column_width=True)
                else:
                    st.write("No se pudo generar una ilustraci칩n para este cuento.")

# Pie de p치gina
st.markdown("---")
st.markdown("춸 2024 Generador de Cuentos Infantiles. Desarrollado con OpenRouter, Together.xyz y Streamlit.")
